<?php

/**
 * @file
 * Helper module for the Gesso theme.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_system_theme_settings_alter().
 */
function gesso_helper_form_system_theme_settings_alter(&$form, FormStateInterface $form_state) {
  // Work-around for a core bug affecting admin themes.
  // See https://www.drupal.org/docs/8/theming-drupal-8/creating-advanced-theme-settings.
  if (isset($form_id)) {
    return;
  }

  if ($form['config_key'] && $form['config_key']['#value']) {
    $theme = explode('.', $form['config_key']['#value'])[0];
  }
  else {
    $theme = \Drupal::theme()->getActiveTheme()->getName();
  }

  $form['buttons'] = [
    '#type' => 'details',
    '#title' => t('Buttons'),
    '#open' => TRUE,
  ];
  $form['buttons']['button_sizes'] = [
    '#type' => 'textarea',
    '#title' => t('Button Sizes'),
    '#default_value' => theme_get_setting('button_sizes', $theme) ?? "c-button|Standard\nc-button.c-button--small|Small\nc-button.c-button--large|Large",
    '#description' => t('Enter one or more classes on each line in the format: classA.classB|Label. Example: c-button.c-button--small|Small'),
    '#required' => TRUE,
    '#element_validate' => ['gesso_helper_validate_buttons'],
  ];
  $form['buttons']['button_styles'] = [
    '#type' => 'textarea',
    '#title' => t('Button Styles'),
    '#default_value' => theme_get_setting('button_styles', $theme) ?? "c-button|Primary\nc-button.c-button--secondary|Secondary\nc-button.c-button--danger|Danger",
    '#description' => t('Enter one or more classes on each line in the format: classA.classB|Label. Example: c-button.c-button--danger|Danger'),
    '#required' => TRUE,
    '#element_validate' => ['gesso_helper_validate_buttons'],
  ];
}

/**
 * Helper function to validate button classes and labels.
 */
function gesso_helper_validate_buttons(array $element, FormStateInterface $formState) {
  $value = str_replace(["\r\n", "\r"], "\n", trim($element['#value']));
  $options = explode("\n", $value);
  foreach ($options as $option) {
    if (!preg_match('@^ *[a-zA-Z0-9_-]+ *(\\.[a-zA-Z0-9_-]+ *)*\\| *.+ *$@', $option)) {
      $formState->setError($element, t('The provided list of classes and labels is invalid.'));
      return FALSE;
    }
  }
}
